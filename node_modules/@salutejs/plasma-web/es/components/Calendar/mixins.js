import { css } from 'styled-components';
import { backgroundPrimary, primary, surfaceSolid03, surfaceLiquid02, addFocus, accent } from '@salutejs/plasma-core';
import { bodySBold } from '@salutejs/plasma-typo';
export var flexCenter = /*#__PURE__*/css(["display:flex;justify-content:center;align-items:center;"]);
export var flexSpaceBetween = /*#__PURE__*/css(["display:flex;justify-content:space-between;align-items:center;"]);
/**
 * Функция для установки синтетического фокуса на выбранном дне.
 */

export var syntheticFocus = function syntheticFocus(ruleset, focused) {
  return css(["&.focus-visible:focus,&[data-focus-visible-added]{outline:none;z-index:1;", ";}", ";"], ruleset, focused && ruleset);
};
/**
 * Миксин для установки синтетического фокуса на выбранной кнопке.
 */

export var buttonFocus = /*#__PURE__*/css(["", ";border:none;background-color:transparent;padding:0;"], /*#__PURE__*/addFocus({
  outlineRadius: '0.563rem',
  outlineSize: '0.063rem',
  outlineOffset: '0.125rem'
}));
/**
 * Миксин для изменения стиля выбранного дня.
 */

export var selected = function selected(_ref) {
  var StyledItem = _ref.StyledItem,
      minWidth = _ref.minWidth,
      minHeight = _ref.minHeight,
      isSelected = _ref.isSelected,
      isCurrent = _ref.isCurrent,
      isHovered = _ref.isHovered;
  return css(["outline:none;", ";", " ", " &:hover{", " ", "}&,&:hover{", "}&:active{", ";background-color:", ";color:", ";}"], addFocus({
    synthesizeFocus: syntheticFocus,
    outlineRadius: '0.563rem',
    outlineSize: '0.063rem',
    outlineOffset: isCurrent ? '0.125rem' : '0.063rem'
  }), isCurrent && css(["border:0.063rem solid ", ";"], primary), isSelected && css(["", ";border:0;background-color:", ";color:", ";"], bodySBold, primary, backgroundPrimary), !isSelected && css(["background-color:", ";cursor:pointer;"], surfaceLiquid02), isCurrent && !isSelected && css(["border:0.063rem solid ", ";background-color:transparent;color:", ";", "{background-color:", ";min-width:", "rem;min-height:", "rem;}"], primary, primary, StyledItem, surfaceLiquid02, minWidth, minHeight), isHovered && css(["", ";background-color:", ";color:", ";cursor:pointer;"], bodySBold, accent, backgroundPrimary), bodySBold, primary, surfaceSolid03);
};