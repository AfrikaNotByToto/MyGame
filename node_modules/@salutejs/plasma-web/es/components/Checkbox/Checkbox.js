var _excluded = ["size", "id", "label", "description", "indeterminate", "disabled", "style", "className", "aria-label"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef, useRef, useMemo } from 'react';
import styled, { css } from 'styled-components';
import { BaseboxRoot, BaseboxInput, BaseboxTrigger, BaseboxContent, BaseboxContentWrapper, BaseboxLabel, BaseboxDescription, accent, secondary, transparent, useForkRef, useUniqId, addFocus } from '@salutejs/plasma-core';
import { caption, footnote1 } from '@salutejs/plasma-tokens-b2b';
import { extractTextFrom } from '../../utils';
import { Done, Indeterminate } from './Icons';
import { sizes } from './Checkbox.props';

var getCustomFocusRuleset = function getCustomFocusRuleset(ruleset, outlineSize, outlineOffset, outlineRadius) {
  var outlineColor = ruleset[3];
  var style = "&::before {\n        top: -".concat(outlineOffset, ";\n        left: -").concat(outlineOffset, ";\n        right: -").concat(outlineOffset, ";\n        bottom: -").concat(outlineOffset, ";\n        border-radius: ").concat(outlineRadius, ";\n        box-shadow: 0 0 0 ").concat(outlineSize, " ").concat(outlineColor, ";\n    }");
  return [ruleset, style];
};

export var syntheticFocus = function syntheticFocus(outlineRadius) {
  return function (ruleset, focused) {
    return css(["input[data-focus-visible-added] + label &{border-color:transparent;", "}input[data-focus-visible-added]:checked + label &,input[type='checkbox'][data-focus-visible-added]:indeterminate + label &{", "}", ";"], getCustomFocusRuleset(ruleset, '0.125rem', '0.188rem', outlineRadius), getCustomFocusRuleset(ruleset, '0.063rem', '0.25rem', "calc(".concat(outlineRadius, " + 0.125rem)")), focused && ruleset);
  };
};
export var StyledRoot = /*#__PURE__*/styled(BaseboxRoot).withConfig({
  componentId: "plasma-web__sc-nu3tgy-0"
})(["margin-left:0.1875rem;margin-bottom:0.1875rem;", ""], function (_ref) {
  var $disabled = _ref.$disabled;
  return $disabled && 'cursor: not-allowed;';
});
export var StyledInput = /*#__PURE__*/styled(BaseboxInput).withConfig({
  componentId: "plasma-web__sc-nu3tgy-1"
})(["width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0);"]);
export var StyledTrigger = /*#__PURE__*/styled(BaseboxTrigger).withConfig({
  componentId: "plasma-web__sc-nu3tgy-2"
})(["margin:0.1875rem 0;", " display:flex;align-items:center;justify-content:center;background:", ";border:0.125rem solid ", ";flex-shrink:0;flex-grow:0;input[type='checkbox']:indeterminate + label &{background:", ";border-color:", ";}input:disabled + label &{opacity:0.4;cursor:inherit;}input:checked + label &{background:", ";border-color:", ";}input:checked:disabled + label &{opacity:0.4;background:", ";}", ""], function (_ref2) {
  var size = _ref2.size;
  return css(["width:", ";height:", ";border-radius:", ";"], sizes[size].width, sizes[size].height, sizes[size].outLineRadius);
}, transparent, secondary, accent, accent, accent, accent, accent, function (_ref3) {
  var _ref3$outlineRadius = _ref3.outlineRadius,
      outlineRadius = _ref3$outlineRadius === void 0 ? '0.375rem' : _ref3$outlineRadius;
  return css(["", ""], addFocus({
    synthesizeFocus: syntheticFocus(outlineRadius),
    outlineRadius: outlineRadius
  }));
});
export var StyledContent = /*#__PURE__*/styled(BaseboxContent).withConfig({
  componentId: "plasma-web__sc-nu3tgy-3"
})(["", " input:disabled + label &{opacity:0.4;}"], function (_ref4) {
  var size = _ref4.size;
  return css(["margin-top:", ";margin-left:", ";"], sizes[size].contentTopOffset, sizes[size].contentLeftOffset);
});
export var StyledLabel = /*#__PURE__*/styled(BaseboxLabel).withConfig({
  componentId: "plasma-web__sc-nu3tgy-4"
})(["", ";"], function (_ref5) {
  var size = _ref5.size;
  return size === 's' && footnote1;
});
export var StyledDescription = /*#__PURE__*/styled(BaseboxDescription).withConfig({
  componentId: "plasma-web__sc-nu3tgy-5"
})(["", ";"], function (_ref6) {
  var size = _ref6.size;
  return size === 's' && caption;
});
var StyledDone = /*#__PURE__*/styled(Done).withConfig({
  componentId: "plasma-web__sc-nu3tgy-6"
})(["transform:scale(0);transition:transform 0.15s ease-in-out;input:checked + label ", " &{transform:scale(1);}"], BaseboxTrigger);
var StyledIndeterminate = /*#__PURE__*/styled(Indeterminate).withConfig({
  componentId: "plasma-web__sc-nu3tgy-7"
})(["background:", ";", ""], accent, function (_ref7) {
  var size = _ref7.size;
  return css(["border-radius:", ";"], sizes[size].outLineRadius);
});
/**
 * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.
 */
// eslint-disable-next-line prefer-arrow-callback

export var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(_ref8, ref) {
  var _ref8$size = _ref8.size,
      size = _ref8$size === void 0 ? 'm' : _ref8$size,
      id = _ref8.id,
      label = _ref8.label,
      description = _ref8.description,
      indeterminate = _ref8.indeterminate,
      disabled = _ref8.disabled,
      style = _ref8.style,
      className = _ref8.className,
      ariaLabelExternal = _ref8['aria-label'],
      rest = _objectWithoutProperties(_ref8, _excluded);

  var inputRef = useRef(null);
  var forkRef = useForkRef(inputRef, ref);
  React.useEffect(function () {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(indeterminate);
    }
  }, [inputRef, indeterminate]);
  var uniqId = useUniqId();
  var uniqLabelId = useUniqId();
  var uniqDescriptionId = useUniqId();
  var checkboxId = id || uniqId;
  var ariaLabel = useMemo(function () {
    return ariaLabelExternal || extractTextFrom(label);
  }, [ariaLabelExternal, label]);
  return /*#__PURE__*/React.createElement(StyledRoot, {
    $disabled: disabled,
    style: style,
    className: className,
    tabIndex: -1
  }, /*#__PURE__*/React.createElement(StyledInput, _extends({}, rest, {
    id: checkboxId,
    ref: forkRef,
    type: "checkbox",
    disabled: disabled,
    "aria-label": ariaLabel,
    "aria-describedby": uniqDescriptionId
  })), /*#__PURE__*/React.createElement(BaseboxContentWrapper, {
    htmlFor: checkboxId
  }, /*#__PURE__*/React.createElement(StyledTrigger, {
    size: size,
    outlineRadius: sizes[size].outLineRadius
  }, indeterminate ? /*#__PURE__*/React.createElement(StyledIndeterminate, {
    size: size
  }) : /*#__PURE__*/React.createElement(StyledDone, {
    size: size
  })), /*#__PURE__*/React.createElement(StyledContent, {
    size: size
  }, label && /*#__PURE__*/React.createElement(StyledLabel, {
    as: "span",
    size: size,
    id: uniqLabelId,
    "aria-hidden": typeof label === 'string'
  }, label), description && /*#__PURE__*/React.createElement(StyledDescription, {
    size: size,
    mt: 4,
    id: uniqDescriptionId
  }, description))));
});