var _excluded = ["id", "disabled", "status", "label", "placeholder", "contentRight", "helperText", "style", "className", "leftHelper", "rightHelper"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef, useState, useMemo, createRef } from 'react';
import styled from 'styled-components';
import { FieldRoot, FieldContent, FieldHelper, TextArea as BaseArea, TextFieldHelper, useResizeObserver } from '@salutejs/plasma-core';
import { applyInputStyles } from '../Field';
var StyledTextArea = /*#__PURE__*/styled(BaseArea).withConfig({
  componentId: "plasma-web__sc-2kfrcp-0"
})(["-webkit-appearance:none;", ""], applyInputStyles);
var StyledFieldHelpers = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-2kfrcp-1"
})(["display:flex;justify-content:space-between;width:", "px;"], function (_ref) {
  var width = _ref.width;
  return width;
});
var StyledFieldContentWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web__sc-2kfrcp-2"
})(["position:absolute;width:", "px;"], function (_ref2) {
  var width = _ref2.width;
  return width;
});
var StyledFieldRightHelper = /*#__PURE__*/styled(FieldHelper).withConfig({
  componentId: "plasma-web__sc-2kfrcp-3"
})(["margin-left:auto;"]);
/**
 * Поле ввода многострочного текста.
 */
// eslint-disable-next-line prefer-arrow-callback

export var TextArea = /*#__PURE__*/forwardRef(function TextArea(_ref3, outerRef) {
  var id = _ref3.id,
      disabled = _ref3.disabled,
      status = _ref3.status,
      label = _ref3.label,
      placeholder = _ref3.placeholder,
      contentRight = _ref3.contentRight,
      helperText = _ref3.helperText,
      style = _ref3.style,
      className = _ref3.className,
      leftHelper = _ref3.leftHelper,
      rightHelper = _ref3.rightHelper,
      rest = _objectWithoutProperties(_ref3, _excluded);

  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      width = _useState2[0],
      setWidth = _useState2[1];

  var ref = useMemo(function () {
    return outerRef && 'current' in outerRef ? outerRef : /*#__PURE__*/createRef();
  }, [outerRef]);
  useResizeObserver(ref, function (currentElement) {
    var _currentElement$getBo = currentElement.getBoundingClientRect(),
        elementWidth = _currentElement$getBo.width;

    setWidth(elementWidth);
  });
  var placeLabel = label || placeholder;
  return /*#__PURE__*/React.createElement(FieldRoot, {
    $disabled: disabled,
    $isContentRight: Boolean(contentRight),
    $isHelper: Boolean(leftHelper || helperText),
    status: status,
    style: style,
    className: className
  }, /*#__PURE__*/React.createElement(StyledFieldContentWrapper, {
    width: width
  }, contentRight && /*#__PURE__*/React.createElement(FieldContent, {
    pos: "right"
  }, contentRight)), /*#__PURE__*/React.createElement(StyledTextArea, _extends({
    ref: ref,
    id: id,
    placeholder: placeLabel,
    disabled: disabled,
    status: status,
    "aria-describedby": id ? "".concat(id, "-helper") : undefined
  }, rest)), /*#__PURE__*/React.createElement(StyledFieldHelpers, {
    width: width,
    id: id ? "".concat(id, "-helper") : undefined
  }, (leftHelper || helperText) && /*#__PURE__*/React.createElement(FieldHelper, {
    as: TextFieldHelper
  }, leftHelper || helperText), rightHelper && /*#__PURE__*/React.createElement(StyledFieldRightHelper, null, rightHelper)));
});