"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selected = exports.buttonFocus = exports.syntheticFocus = exports.flexSpaceBetween = exports.flexCenter = void 0;

var _styledComponents = /*#__PURE__*/require("styled-components");

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _plasmaTypo = /*#__PURE__*/require("@salutejs/plasma-typo");

var flexCenter = /*#__PURE__*/(0, _styledComponents.css)(["display:flex;justify-content:center;align-items:center;"]);
exports.flexCenter = flexCenter;
var flexSpaceBetween = /*#__PURE__*/(0, _styledComponents.css)(["display:flex;justify-content:space-between;align-items:center;"]);
/**
 * Функция для установки синтетического фокуса на выбранном дне.
 */

exports.flexSpaceBetween = flexSpaceBetween;

var syntheticFocus = function syntheticFocus(ruleset, focused) {
  return (0, _styledComponents.css)(["&.focus-visible:focus,&[data-focus-visible-added]{outline:none;z-index:1;", ";}", ";"], ruleset, focused && ruleset);
};
/**
 * Миксин для установки синтетического фокуса на выбранной кнопке.
 */


exports.syntheticFocus = syntheticFocus;
var buttonFocus = /*#__PURE__*/(0, _styledComponents.css)(["", ";border:none;background-color:transparent;padding:0;"], /*#__PURE__*/(0, _plasmaCore.addFocus)({
  outlineRadius: '0.563rem',
  outlineSize: '0.063rem',
  outlineOffset: '0.125rem'
}));
/**
 * Миксин для изменения стиля выбранного дня.
 */

exports.buttonFocus = buttonFocus;

var selected = function selected(_ref) {
  var StyledItem = _ref.StyledItem,
      minWidth = _ref.minWidth,
      minHeight = _ref.minHeight,
      isSelected = _ref.isSelected,
      isCurrent = _ref.isCurrent,
      isHovered = _ref.isHovered;
  return (0, _styledComponents.css)(["outline:none;", ";", " ", " &:hover{", " ", "}&,&:hover{", "}&:active{", ";background-color:", ";color:", ";}"], (0, _plasmaCore.addFocus)({
    synthesizeFocus: syntheticFocus,
    outlineRadius: '0.563rem',
    outlineSize: '0.063rem',
    outlineOffset: isCurrent ? '0.125rem' : '0.063rem'
  }), isCurrent && (0, _styledComponents.css)(["border:0.063rem solid ", ";"], _plasmaCore.primary), isSelected && (0, _styledComponents.css)(["", ";border:0;background-color:", ";color:", ";"], _plasmaTypo.bodySBold, _plasmaCore.primary, _plasmaCore.backgroundPrimary), !isSelected && (0, _styledComponents.css)(["background-color:", ";cursor:pointer;"], _plasmaCore.surfaceLiquid02), isCurrent && !isSelected && (0, _styledComponents.css)(["border:0.063rem solid ", ";background-color:transparent;color:", ";", "{background-color:", ";min-width:", "rem;min-height:", "rem;}"], _plasmaCore.primary, _plasmaCore.primary, StyledItem, _plasmaCore.surfaceLiquid02, minWidth, minHeight), isHovered && (0, _styledComponents.css)(["", ";background-color:", ";color:", ";cursor:pointer;"], _plasmaTypo.bodySBold, _plasmaCore.accent, _plasmaCore.backgroundPrimary), _plasmaTypo.bodySBold, _plasmaCore.primary, _plasmaCore.surfaceSolid03);
};

exports.selected = selected;