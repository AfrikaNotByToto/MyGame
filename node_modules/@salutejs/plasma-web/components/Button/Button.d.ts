import type { ButtonProps as BaseProps, ButtonContentProps, ButtonSizeProps, ButtonViewProps } from '@salutejs/plasma-core';
import type { ButtonView } from './Button.props';
export declare type ButtonProps = BaseProps & Partial<ButtonSizeProps> & Partial<ButtonViewProps<ButtonView>> & ButtonContentProps;
/**
 * Кнопка.
 * Поддерживает несколько режимов отображения (`view`) и размеров (`size`).
 */
export declare const Button: import("react").ForwardRefExoticComponent<(BaseProps<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
    text?: import("react").ReactNode;
    contentLeft?: import("react").ReactNode;
    contentRight?: undefined;
    children?: undefined;
    isLoading?: boolean | undefined;
    loader?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
    text?: import("react").ReactNode;
    contentLeft?: undefined;
    contentRight?: import("react").ReactNode;
    children?: undefined;
    isLoading?: boolean | undefined;
    loader?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"checked" | "primary" | "secondary" | "success" | "warning" | "critical" | "overlay" | "clear">> & {
    text?: undefined;
    contentLeft?: undefined;
    contentRight?: undefined;
    children?: import("react").ReactNode;
    isLoading?: boolean | undefined;
    loader?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLButtonElement>)>;
//# sourceMappingURL=Button.d.ts.map