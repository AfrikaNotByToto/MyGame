"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Checkbox = exports.StyledDescription = exports.StyledLabel = exports.StyledContent = exports.StyledTrigger = exports.StyledInput = exports.StyledRoot = exports.syntheticFocus = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _plasmaTokensB2b = /*#__PURE__*/require("@salutejs/plasma-tokens-b2b");

var _utils = /*#__PURE__*/require("../../utils");

var _Icons = /*#__PURE__*/require("./Icons");

var _Checkbox = /*#__PURE__*/require("./Checkbox.props");

var _excluded = ["size", "id", "label", "description", "indeterminate", "disabled", "style", "className", "aria-label"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var getCustomFocusRuleset = function getCustomFocusRuleset(ruleset, outlineSize, outlineOffset, outlineRadius) {
  var outlineColor = ruleset[3];
  var style = "&::before {\n        top: -".concat(outlineOffset, ";\n        left: -").concat(outlineOffset, ";\n        right: -").concat(outlineOffset, ";\n        bottom: -").concat(outlineOffset, ";\n        border-radius: ").concat(outlineRadius, ";\n        box-shadow: 0 0 0 ").concat(outlineSize, " ").concat(outlineColor, ";\n    }");
  return [ruleset, style];
};

var syntheticFocus = function syntheticFocus(outlineRadius) {
  return function (ruleset, focused) {
    return (0, _styledComponents.css)(["input[data-focus-visible-added] + label &{border-color:transparent;", "}input[data-focus-visible-added]:checked + label &,input[type='checkbox'][data-focus-visible-added]:indeterminate + label &{", "}", ";"], getCustomFocusRuleset(ruleset, '0.125rem', '0.188rem', outlineRadius), getCustomFocusRuleset(ruleset, '0.063rem', '0.25rem', "calc(".concat(outlineRadius, " + 0.125rem)")), focused && ruleset);
  };
};

exports.syntheticFocus = syntheticFocus;
var StyledRoot = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxRoot).withConfig({
  componentId: "plasma-web__sc-nu3tgy-0"
})(["margin-left:0.1875rem;margin-bottom:0.1875rem;", ""], function (_ref) {
  var $disabled = _ref.$disabled;
  return $disabled && 'cursor: not-allowed;';
});
exports.StyledRoot = StyledRoot;
var StyledInput = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxInput).withConfig({
  componentId: "plasma-web__sc-nu3tgy-1"
})(["width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0);"]);
exports.StyledInput = StyledInput;
var StyledTrigger = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxTrigger).withConfig({
  componentId: "plasma-web__sc-nu3tgy-2"
})(["margin:0.1875rem 0;", " display:flex;align-items:center;justify-content:center;background:", ";border:0.125rem solid ", ";flex-shrink:0;flex-grow:0;input[type='checkbox']:indeterminate + label &{background:", ";border-color:", ";}input:disabled + label &{opacity:0.4;cursor:inherit;}input:checked + label &{background:", ";border-color:", ";}input:checked:disabled + label &{opacity:0.4;background:", ";}", ""], function (_ref2) {
  var size = _ref2.size;
  return (0, _styledComponents.css)(["width:", ";height:", ";border-radius:", ";"], _Checkbox.sizes[size].width, _Checkbox.sizes[size].height, _Checkbox.sizes[size].outLineRadius);
}, _plasmaCore.transparent, _plasmaCore.secondary, _plasmaCore.accent, _plasmaCore.accent, _plasmaCore.accent, _plasmaCore.accent, _plasmaCore.accent, function (_ref3) {
  var _ref3$outlineRadius = _ref3.outlineRadius,
      outlineRadius = _ref3$outlineRadius === void 0 ? '0.375rem' : _ref3$outlineRadius;
  return (0, _styledComponents.css)(["", ""], (0, _plasmaCore.addFocus)({
    synthesizeFocus: syntheticFocus(outlineRadius),
    outlineRadius: outlineRadius
  }));
});
exports.StyledTrigger = StyledTrigger;
var StyledContent = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxContent).withConfig({
  componentId: "plasma-web__sc-nu3tgy-3"
})(["", " input:disabled + label &{opacity:0.4;}"], function (_ref4) {
  var size = _ref4.size;
  return (0, _styledComponents.css)(["margin-top:", ";margin-left:", ";"], _Checkbox.sizes[size].contentTopOffset, _Checkbox.sizes[size].contentLeftOffset);
});
exports.StyledContent = StyledContent;
var StyledLabel = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxLabel).withConfig({
  componentId: "plasma-web__sc-nu3tgy-4"
})(["", ";"], function (_ref5) {
  var size = _ref5.size;
  return size === 's' && _plasmaTokensB2b.footnote1;
});
exports.StyledLabel = StyledLabel;
var StyledDescription = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.BaseboxDescription).withConfig({
  componentId: "plasma-web__sc-nu3tgy-5"
})(["", ";"], function (_ref6) {
  var size = _ref6.size;
  return size === 's' && _plasmaTokensB2b.caption;
});
exports.StyledDescription = StyledDescription;
var StyledDone = /*#__PURE__*/(0, _styledComponents["default"])(_Icons.Done).withConfig({
  componentId: "plasma-web__sc-nu3tgy-6"
})(["transform:scale(0);transition:transform 0.15s ease-in-out;input:checked + label ", " &{transform:scale(1);}"], _plasmaCore.BaseboxTrigger);
var StyledIndeterminate = /*#__PURE__*/(0, _styledComponents["default"])(_Icons.Indeterminate).withConfig({
  componentId: "plasma-web__sc-nu3tgy-7"
})(["background:", ";", ""], _plasmaCore.accent, function (_ref7) {
  var size = _ref7.size;
  return (0, _styledComponents.css)(["border-radius:", ";"], _Checkbox.sizes[size].outLineRadius);
});
/**
 * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.
 */
// eslint-disable-next-line prefer-arrow-callback

var Checkbox = /*#__PURE__*/(0, _react.forwardRef)(function Checkbox(_ref8, ref) {
  var _ref8$size = _ref8.size,
      size = _ref8$size === void 0 ? 'm' : _ref8$size,
      id = _ref8.id,
      label = _ref8.label,
      description = _ref8.description,
      indeterminate = _ref8.indeterminate,
      disabled = _ref8.disabled,
      style = _ref8.style,
      className = _ref8.className,
      ariaLabelExternal = _ref8['aria-label'],
      rest = _objectWithoutProperties(_ref8, _excluded);

  var inputRef = (0, _react.useRef)(null);
  var forkRef = (0, _plasmaCore.useForkRef)(inputRef, ref);

  _react["default"].useEffect(function () {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(indeterminate);
    }
  }, [inputRef, indeterminate]);

  var uniqId = (0, _plasmaCore.useUniqId)();
  var uniqLabelId = (0, _plasmaCore.useUniqId)();
  var uniqDescriptionId = (0, _plasmaCore.useUniqId)();
  var checkboxId = id || uniqId;
  var ariaLabel = (0, _react.useMemo)(function () {
    return ariaLabelExternal || (0, _utils.extractTextFrom)(label);
  }, [ariaLabelExternal, label]);
  return /*#__PURE__*/_react["default"].createElement(StyledRoot, {
    $disabled: disabled,
    style: style,
    className: className,
    tabIndex: -1
  }, /*#__PURE__*/_react["default"].createElement(StyledInput, _extends({}, rest, {
    id: checkboxId,
    ref: forkRef,
    type: "checkbox",
    disabled: disabled,
    "aria-label": ariaLabel,
    "aria-describedby": uniqDescriptionId
  })), /*#__PURE__*/_react["default"].createElement(_plasmaCore.BaseboxContentWrapper, {
    htmlFor: checkboxId
  }, /*#__PURE__*/_react["default"].createElement(StyledTrigger, {
    size: size,
    outlineRadius: _Checkbox.sizes[size].outLineRadius
  }, indeterminate ? /*#__PURE__*/_react["default"].createElement(StyledIndeterminate, {
    size: size
  }) : /*#__PURE__*/_react["default"].createElement(StyledDone, {
    size: size
  })), /*#__PURE__*/_react["default"].createElement(StyledContent, {
    size: size
  }, label && /*#__PURE__*/_react["default"].createElement(StyledLabel, {
    as: "span",
    size: size,
    id: uniqLabelId,
    "aria-hidden": typeof label === 'string'
  }, label), description && /*#__PURE__*/_react["default"].createElement(StyledDescription, {
    size: size,
    mt: 4,
    id: uniqDescriptionId
  }, description))));
});
exports.Checkbox = Checkbox;