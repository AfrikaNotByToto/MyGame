"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "StyledCard", {
  enumerable: true,
  get: function get() {
    return _plasmaCore.StyledCard;
  }
});
exports.Card = void 0;

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var DEFAULT_ROUNDNESS = 20;

/**
 * Контейнер со скругленными углами с возможностью фокусировки на нем.
 */
var Card = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.Card).withConfig({
  componentId: "plasma-web__sc-1mnfyzq-0"
})(["box-shadow:none;background:transparent;img{", "}", ""], function (_ref) {
  var _ref$roundness = _ref.roundness,
      roundness = _ref$roundness === void 0 ? DEFAULT_ROUNDNESS : _ref$roundness;
  return roundness && (0, _styledComponents.css)(["", ";"], (0, _plasmaCore.applyRoundness)({
    roundness: roundness
  }));
}, function (_ref2) {
  var background = _ref2.background;
  return background && (0, _styledComponents.css)(["background:", ";", "{padding:1.25rem;}img{border-bottom-left-radius:0;border-bottom-right-radius:0;}"], background, _plasmaCore.CardContent);
});
exports.Card = Card;